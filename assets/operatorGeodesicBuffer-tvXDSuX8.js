const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodesicBuffer-CA_veGYr.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ProjectionTransformation-C7dqAE7C.js","assets/index-Byn_dG8u.js","assets/index-xat1a9-L.css","assets/GeometryCleaner-BEJM7I4l-_FvY38al.js"])))=>i.map(i=>d[i]);
import{ak as a,fF as f,fH as c,fG as _}from"./index-Byn_dG8u.js";import{s as l}from"./SimpleGeometryCursor-B92kdZ15.js";let n;function m(){return!!n&&_()}async function d(){if(!m()){const[t,r]=await Promise.all([a(()=>import("./OperatorGeodesicBuffer-CA_veGYr.js"),__vite__mapDeps([0,1,2,3,4,5])),a(()=>import("./ProjectionTransformation-C7dqAE7C.js").then(e=>e.bF),__vite__mapDeps([2,1,3,4])).then(e=>e.aG).then(({injectPe:e})=>e),f()]);n=new t.OperatorGeodesicBuffer,r(c)}}function v(t,r,e,o,u){return n.execute(t,r,e,o,u,!1,null)}function E(t,r,e,o,u,i){const s=n.executeMany(new l(t),r,e,o,u,!1,i,null);return Array.from(s)}function G(){return n.supportsCurves()}export{G as a,E as c,v as i,m as s,d as u};
