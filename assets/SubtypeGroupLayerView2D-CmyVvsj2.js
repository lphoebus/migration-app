import{ei as s,gg as n,aR as d,a$ as u,b1 as l}from"./index-Byn_dG8u.js";import{d as g}from"./FeatureLayerView2D-4VMlG6IW.js";import"./featureConversionUtils-JEm3Yhrc.js";import"./timeSupport-CnBB-mNy.js";import"./AttributeBinsFeatureSet-Bq3vRy_9.js";import"./LayerView-Co2KRzLo.js";import"./Container-CnJ9MeXd.js";import"./layerViewUtils-DtR5Bf9m.js";import"./TechniqueInstance-CrNjKC1n.js";import"./UpdateTracking2D-DiA43mfK.js";import"./dataViewUtils-BUQgRpWx.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CCL9Ztbq.js";import"./FramebufferObject-CnaeSxxr.js";import"./VertexArrayObject-DwdmfeSZ.js";import"./TileContainer-Cu8QXR6_.js";import"./WGLContainer-u4QKwOqc.js";import"./ProgramTemplate-B1dK5g1a.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Dt-Yo42q.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-EQjiKQjl.js";import"./CIMSymbolHelper-dTciPGrk.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-VmKjxowA.js";import"./GeometryUtils-frJpBBou.js";import"./rasterizingUtils-cdOSpX8x.js";import"./floatRGBA-DvSQP-0o.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DuCgryp3.js";import"./ShaderBuilder-DF4nfqSJ.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CkmK3MYK.js";import"./CircularArray-CujHzHWW.js";import"./SDFHelper-BScX2Ja9.js";import"./constants-B4mRqufT.js";import"./parquet-CiQ6iYUJ.js";import"./popupUtils-u_Ai1jmY.js";import"./RefreshableLayerView-CrL1Qd3u.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ri=i;export{ri as default};
