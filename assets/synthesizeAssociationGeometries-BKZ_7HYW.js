import{aT as u,a$ as i,b0 as a,b1 as y,fI as d,fK as l,fJ as h,aK as x}from"./index-Cv1x7wWx.js";import{d as $}from"./Association-C0mJwtmr.js";let r=class extends u{constructor(t){super(t),this.maxGeometryCountExceeded=!1,this.associations=[]}};i([a({type:Boolean,json:{write:!0}})],r.prototype,"maxGeometryCountExceeded",void 0),i([a({type:[$],json:{write:!0}})],r.prototype,"associations",void 0),r=i([y("esri.rest.networks.support.AssociationGeometriesResult")],r);const G=r;async function w(t,o,e){const s=d(t),n={...o.toJSON(),f:"json"},c=l({...s.query,...n});e?e.method="post":e={method:"post"};const p=h(c,e),f=`${s.path}/synthesizeAssociationGeometries`;return x(f,p).then(m=>R(m,o.outSpatialReference))}function R(t,o){const{data:e}=t;if(o)for(const s of e.associations)s.geometry.spatialReference||(s.geometry.spatialReference=o.clone());return G.fromJSON(e)}export{w as synthesizeAssociationGeometries};
