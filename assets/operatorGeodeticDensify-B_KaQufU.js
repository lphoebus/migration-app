const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticDensifyByLength-Dv6MYP20.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ProjectionTransformation-C7dqAE7C.js","assets/index-Byn_dG8u.js","assets/index-xat1a9-L.css"])))=>i.map(i=>d[i]);
import{ak as i,fF as a,fG as s,fH as c}from"./index-Byn_dG8u.js";import{s as f}from"./SimpleGeometryCursor-B92kdZ15.js";let r;function _(){return!!r&&s()}async function p(){if(!_()){const[e,n]=await Promise.all([i(()=>import("./OperatorGeodeticDensifyByLength-Dv6MYP20.js"),__vite__mapDeps([0,1,2,3,4])),i(()=>import("./ProjectionTransformation-C7dqAE7C.js").then(t=>t.bF),__vite__mapDeps([2,1,3,4])).then(t=>t.aG).then(({injectPe:t})=>t),a()]);r=new e.OperatorGeodeticDensifyByLength,n(c)}}function y(e,n,t,o){return r.execute(e,n,t,o,null)}function P(e,n,t,o){const u=r.executeMany(new f(e),n,t,o,null);return Array.from(u)}function d(){return r.supportsCurves()}export{d as a,P as c,p as i,_ as s,y as u};
