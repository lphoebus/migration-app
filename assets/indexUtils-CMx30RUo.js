import{fl as c,lZ as m,l_ as y,l$ as d,m0 as p,m1 as _,bl as b,aF as g,m2 as h,aw as w,aE as A,kc as f,m3 as B}from"./index-ChIkxCSH.js";import{f as R,A as I}from"./Indices-Bv1Una40.js";function S(e,t){l(e.typedBuffer,t.typedBuffer,e.typedBufferStride,t.typedBufferStride)}function l(e,t,o=2,r=o){const n=t.length/2;let a=0,i=0;if(!c(t)||m(t)){for(let s=0;s<n;++s)e[a]=t[i],e[a+1]=t[i+1],a+=o,i+=r;return}const u=y(t);if(d(t))for(let s=0;s<n;++s)e[a]=Math.max(t[i]/u,-1),e[a+1]=Math.max(t[i+1]/u,-1),a+=o,i+=r;else for(let s=0;s<n;++s)e[a]=t[i]/u,e[a+1]=t[i+1]/u,a+=o,i+=r}function q(e,t,o,r){const n=e.typedBuffer,a=e.typedBufferStride,i=(r==null?void 0:r.count)??e.count;let u=((r==null?void 0:r.dstIndex)??0)*a;for(let s=0;s<i;++s)n[u]=t,n[u+1]=o,u+=a}Object.freeze(Object.defineProperty({__proto__:null,fill:q,normalizeIntegerBuffer:l,normalizeIntegerBufferView:S},Symbol.toStringTag,{value:"Module"}));class E{constructor(t){this._streamDataRequester=t}async loadJSON(t,o){return this._load("json",t,o)}async loadBinary(t,o){return _(t)?(b(o),p(t)):this._load("binary",t,o)}async loadImage(t,o){return this._load("image",t,o)}async _load(t,o,r){if(this._streamDataRequester==null)return(await g(o,{responseType:T[t]})).data;const n=await h(this._streamDataRequester.request(o,t,r));if(n.ok===!0)return n.value;throw A(n.error),new w("glt-loader-request-error",`Request for resource failed: ${n.error}`)}}const T={image:"image",binary:"array-buffer",json:"json","image+type":void 0};function v(e,t){switch(t){case f.TRIANGLES:return $(e);case f.TRIANGLE_STRIP:return j(e);case f.TRIANGLE_FAN:return N(e)}}function $(e){return typeof e=="number"?I(e):B(e)?new Uint16Array(e):e}function j(e){const t=typeof e=="number"?e:e.length;if(t<3)return[];const o=t-2,r=R(3*o);if(typeof e=="number"){let n=0;for(let a=0;a<o;a+=1)a%2==0?(r[n++]=a,r[n++]=a+1,r[n++]=a+2):(r[n++]=a+1,r[n++]=a,r[n++]=a+2)}else{let n=0;for(let a=0;a<o;a+=1)a%2==0?(r[n++]=e[a],r[n++]=e[a+1],r[n++]=e[a+2]):(r[n++]=e[a+1],r[n++]=e[a],r[n++]=e[a+2])}return r}function N(e){const t=typeof e=="number"?e:e.length;if(t<3)return new Uint16Array(0);const o=t-2,r=o<=65536?new Uint16Array(3*o):new Uint32Array(3*o);if(typeof e=="number"){let u=0;for(let s=0;s<o;++s)r[u++]=0,r[u++]=s+1,r[u++]=s+2;return r}const n=e[0];let a=e[1],i=0;for(let u=0;u<o;++u){const s=e[u+2];r[i++]=n,r[i++]=a,r[i++]=s,a=s}return r}export{l as a,S as b,q as l,E as n,v as o};
