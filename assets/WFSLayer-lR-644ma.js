const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BEoKfti0.js","assets/index-BQ0ImBn8.css"])))=>i.map(i=>d[i]);
import{aT as U,aU as J,e2 as k,b3 as R,aw as W,g6 as f,dm as Y,eE as D,aW as L,ba as X,fB as H,bg as r,bh as i,bi as T,jf as A,jg as Q,gE as B,jh as V,ji as z,go as G,gS as M,jj as Z,gp as K,gs as ee,gq as te,gr as re,gt as ie,bc as C,jk as S,jl as se,f$ as P,b9 as ae,az as oe,jm as ne,be as c,jn as le,al as ue,gu as pe,g$ as de,gM as ye,dt as ce,jp as me,jq as he,jr as fe,js as ge,gw as we,h0 as h,jM as ve,ju as Fe,e3 as be,jv as xe,jw as Oe,jx as je,gC as Se}from"./index-BEoKfti0.js";import{y as Ie,u as Re}from"./clientSideDefaults-CQKcoiL6.js";import{v as Te,W as Ce,z as Pe,Y as $e,F as qe}from"./wfsUtils-D3QdpuMh.js";import{i as _e}from"./AttributeBinsFeatureSet-gWm3SE8F.js";import"./QueryEngineCapabilities-CsRUnGk7.js";import"./geojson-WmOJx1gv.js";import"./date-Ctp1FiBW.js";import"./xmlUtils-CtUoQO7q.js";let d=class extends U{constructor(){super(...arguments),this._connection=null,this._workerHandler=null,this.capabilities=Ie(!1,!1),this.type="wfs",this.refresh=J(async()=>{await this.load();const e={customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount},{extent:t}=await this._workerHandler.refresh(e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null,this._workerHandler=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){const a=await this.queryFeaturesJSON(e,t);return k.fromJSON(a)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._workerHandler.queryFeatures(e?e.toJSON():void 0,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._workerHandler.queryFeatureCount(e?e.toJSON():void 0,t)}async queryObjectIds(e,t={}){return await this.load(t),this._workerHandler.queryObjectIds(e?e.toJSON():void 0,t)}async queryExtent(e,t={}){await this.load(t);const a=await this._workerHandler.queryExtent(e?e.toJSON():void 0,t);return{count:a.count,extent:R.fromJSON(a.extent)}}async querySnapping(e,t={}){return await this.load(t),this._workerHandler.querySnapping(e,t)}async queryAttributeBins(e,t={}){await this.load(t);const a=await this._workerHandler.queryAttributeBins(e==null?void 0:e.toJSON(),t);return _e.fromJSON(a)}async _createLoadOptions(e){var O,j;const{url:t,customParameters:a,name:n,namespaceUri:l,fields:o,geometryType:u,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,swapXY:v}=this.layer,m=this.layer.originOf("spatialReference")==="defaults"?void 0:this.layer.spatialReference;if(!t)throw new W("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await Te(t,{customParameters:a,...e}));const $=["fields","geometryType","name","namespaceUri","swapXY"].some(F=>this.layer[F]==null),p=$?await Ce(this.wfsCapabilities,n,l,{spatialReference:m,customParameters:a,signal:e==null?void 0:e.signal}):{...Pe(o??[]),geometryType:u,name:n,namespaceUri:l,spatialReference:m,swapXY:v},q=$e(this.wfsCapabilities.readFeatureTypes(),p.name,p.namespaceUri),_=f.toJSON(p.geometryType),{operations:x}=this.wfsCapabilities,E=x.GetFeature.url,N=x.GetFeature.outputFormat;return{customParameters:a,featureType:q,fields:((O=p.fields)==null?void 0:O.map(F=>F.toJSON()))??[],geometryField:p.geometryField,geometryType:_,getFeatureUrl:E,getFeatureOutputFormat:N,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,objectIdField:p.objectIdField,spatialReference:(j=p.spatialReference)==null?void 0:j.toJSON(),swapXY:!!p.swapXY}}async _startWorker(e){const[t,a]=await Y([this._createLoadOptions(e),D("WFSSourceWorker",{...e,strategy:L("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),n=t.error||a.error||null,l=a.value||null;if(n)throw l&&l.close(),n;const o=t.value;this._connection=a.value,this._workerHandler=this._connection.createInvokeProxy();const u=await this._workerHandler.load(o,e);for(const y of u.warnings)X.getLogger(this.layer).warn("#load()",`${y.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:y});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:H},extent:u.extent,fields:o.fields,geometryType:o.geometryType,objectIdField:o.objectIdField,geometryField:o.geometryField,drawingInfo:Re(o.geometryType),name:o.featureType.title,wfsInfo:{name:o.featureType.name,featureUrl:o.getFeatureUrl,maxFeatures:o.maxRecordCount,swapXY:o.swapXY,supportedSpatialReferences:o.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:o.featureType.namespaceUri}}}};r([i()],d.prototype,"capabilities",void 0),r([i({constructOnly:!0})],d.prototype,"layer",void 0),r([i()],d.prototype,"sourceJSON",void 0),r([i()],d.prototype,"type",void 0),r([i()],d.prototype,"wfsCapabilities",void 0),d=r([T("esri.layers.graphics.sources.WFSSource")],d);var b;const I=me();let s=b=class extends A(Q(B(V(z(G(M(Z(K(ee(te(re(ie(pe))))))))))))){static fromWFSLayerInfo(e){const{customParameters:t,fields:a,geometryField:n,geometryType:l,name:o,namespaceUri:u,objectIdField:y,spatialReference:g,swapXY:w,url:v,wfsCapabilities:m}=e;return new b({customParameters:t,fields:a,geometryField:n,geometryType:l,name:o,namespaceUri:u,objectIdField:y,spatialReference:g,swapXY:w,url:v,wfsCapabilities:m})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxRecordCount=3e3,this.maxPageCount=10,this.maxTotalRecordCount=2e5,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=C.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){var e;(e=this.source)==null||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),S(this.renderer,this.fieldsIndex),se(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){var e;return(e=this.source)==null?void 0:e.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,a){const n=e.filter(l=>l.name!==qe);this.geometryField&&n.unshift(new P({name:this.geometryField,alias:this.geometryField,type:"geometry"})),ae(a,n.map(l=>l.toJSON()),t)}get parsedUrl(){return oe(this.url)}set renderer(e){S(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){var e;return(e=this.source)==null?void 0:e.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return ne(this,e)}createQuery(){const e=new c({returnGeometry:!0,outFields:["*"],where:this.definitionExpression||"1=1"}),{timeOffset:t,timeExtent:a}=this;return e.timeExtent=t!=null&&a!=null?a.offset(-t.value,t.unit):a||null,e}getFieldDomain(e,t){var a;return(a=this.getField(e))==null?void 0:a.domain}getField(e){var t;return(t=this.fieldsIndex)==null?void 0:t.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(c.from(e)||this.createQuery(),t)).then(a=>{if(a!=null&&a.features)for(const n of a.features)n.layer=n.sourceLayer=this;return a})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(c.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(c.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(c.from(e)||this.createQuery(),t))}async queryAttributeBins(e,t){const{source:a,capabilities:n}=await this.load();le(e,n,"WFSLayer");const l=await ue(()=>import("./index-BEoKfti0.js").then(u=>u.yF),__vite__mapDeps([0,1])),o=await a.queryAttributeBins(l.default.from(e),t);if(o.features)for(const u of o.features)u.layer=u.sourceLayer=this;return o}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh();return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i({readOnly:!0})],s.prototype,"capabilities",null),r([i({type:String})],s.prototype,"copyright",void 0),r([i({readOnly:!0})],s.prototype,"createQueryVersion",null),r([i({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],s.prototype,"customParameters",void 0),r([i(de("dateFieldsTimeReference"))],s.prototype,"dateFieldsTimeZone",void 0),r([i({readOnly:!0})],s.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),r([i({type:String})],s.prototype,"displayField",void 0),r([i(ye)],s.prototype,"elevationInfo",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"featureUrl",void 0),r([i({type:[P],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],s.prototype,"fields",void 0),r([ce("fields")],s.prototype,"writeFields",null),r([i(I.fieldsIndex)],s.prototype,"fieldsIndex",void 0),r([i({type:R,json:{name:"extent"}})],s.prototype,"fullExtent",void 0),r([i()],s.prototype,"geometryField",void 0),r([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:f.read},write:{target:"layerDefinition.geometryType",writer:f.write,ignoreOrigin:!0},origins:{service:{read:f.read}}}})],s.prototype,"geometryType",void 0),r([i({type:String})],s.prototype,"id",void 0),r([i(he)],s.prototype,"labelsVisible",void 0),r([i({type:[ge],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:fe},write:!0}})],s.prototype,"labelingInfo",void 0),r([i(we)],s.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],s.prototype,"listMode",void 0),r([i({type:String})],s.prototype,"objectIdField",void 0),r([i({type:["WFS"]})],s.prototype,"operationalLayerType",void 0),r([i({type:h,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"maxRecordCount",void 0),r([i({type:h})],s.prototype,"maxPageCount",void 0),r([i({type:h})],s.prototype,"maxTotalRecordCount",void 0),r([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],s.prototype,"mode",void 0),r([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"name",void 0),r([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"namespaceUri",void 0),r([i(ve)],s.prototype,"opacity",void 0),r([i(I.outFields)],s.prototype,"outFields",void 0),r([i({readOnly:!0})],s.prototype,"parsedUrl",null),r([i(Fe)],s.prototype,"popupEnabled",void 0),r([i({type:be,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),r([i({types:Oe,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:xe,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],s.prototype,"renderer",null),r([i(je)],s.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],s.prototype,"source",void 0),r([i({type:C,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],s.prototype,"spatialReference",void 0),r([i({readOnly:!0,type:[h],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"spatialReferences",void 0),r([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"swapXY",void 0),r([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],s.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),r([i(Se)],s.prototype,"url",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"version",void 0),r([i()],s.prototype,"wfsCapabilities",null),s=b=r([T("esri.layers.WFSLayer")],s);const Le=s;export{Le as default};
