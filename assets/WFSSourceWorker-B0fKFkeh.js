import{gR as T,ax as g,aL as p,f5 as E,f6 as q,gX as P,gU as I,ba as d,f0 as y,dl as C,bg as b,gS as $}from"./index-Cv1x7wWx.js";import{s as j,u as N}from"./featureConversionUtils-CtcLlABV.js";import{u as O}from"./executeQueryForSnapping-B9AE_hCU.js";import{f as Q}from"./FeatureStore-DfyIdbmY.js";import{L}from"./QueryEngine-DxPey5vp.js";import{E as M,N as k}from"./geojson-BFdBF2Yh.js";import{g as U}from"./sourceUtils-DCPav6Jq.js";import{o as A,e as Z,K as _}from"./wfsUtils-c-ChQMeF.js";import"./timeSupport-C4X-wF_f.js";import"./BoundsStore-DVThHQa3.js";import"./PooledRBush-CB61OB6P.js";import"./optimizedFeatureQueryEngineAdapter-BUO5UqjV.js";import"./WhereClauseCache-D8IFwncj.js";import"./WhereClause-Cg7L22Em.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./SnappingCandidate-DGkpYqI6.js";import"./date-Ctp1FiBW.js";import"./xmlUtils-CtUoQO7q.js";const x="esri.layers.WFSLayer";class ue{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=null}async load(e,t={}){const{getFeatureUrl:a,getFeatureOutputFormat:r,fields:n,geometryType:u,featureType:o,maxRecordCount:i,maxTotalRecordCount:c,maxPageCount:R,objectIdField:f,customParameters:F}=e,{spatialReference:h,getFeatureSpatialReference:m}=A(a,o,e.spatialReference);try{await T(m,h)}catch{throw new g("unsupported-projection","Projection not supported",{inSpatialReference:m,outSpatialReference:h})}p(t),this._customParameters=F,this._featureType=o,this._fieldsIndex=E.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:q}:null}),this._geometryType=u,this._getFeatureUrl=a,this._getFeatureOutputFormat=r,this._getFeatureSpatialReference=m,this._maxRecordCount=i,this._maxTotalRecordCount=c,this._maxPageCount=R,this._objectIdField=f,this._spatialReference=h;let l=await this._snapshotFeatures(t);if(l.errors.length>0&&(this._supportsPagination=!1,l=await this._snapshotFeatures(t),l.errors.length>0))throw l.errors[0];return this._queryEngine=new L({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:f,spatialReference:h,timeInfo:null,featureStore:new Q({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(l.features),{warnings:w(l),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new g("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(e,t.signal)).filter(P)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),O(this._queryEngine,e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){var t;return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,(t=this._snapshotTask)==null||t.abort(),this._snapshotTask=I(a=>this._snapshotFeatures({signal:a})),this._snapshotTask.promise.then(a=>{var r;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(a.features);for(const n of w(a))d.getLogger(x).warn(new y("wfs-layer:refresh-warning",n.message,n.details));(r=a.errors)!=null&&r.length&&d.getLogger(x).warn(new y("wfs-layer:refresh-error","Refresh completed with errors",{errors:a.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){const t=e==null?void 0:e.signal,a=this._maxTotalRecordCount,r=this._maxPageCount,n=this._supportsPagination?await Z(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0;let u=[];const o=[];if(n==null)try{u=await this._singleQuery(t)}catch(i){C(i)||o.push(i)}else{const i=Math.min(n,a),c=J(this,Math.max(1,Math.min(Math.ceil(i/this._maxRecordCount),r)),t);await Promise.allSettled(Array.from({length:10}).map(()=>v(c,u,o)))}return p(t),{features:u,totalRecordCount:n,maxTotalRecordCount:a,maxPageCount:r,errors:o}}async _singleQuery(e){const t=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:e});return this._processGeoJSON(t,{signal:e})}async _pageQuery(e,t){const a=e*this._maxRecordCount,r=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:t});return this._processGeoJSON(r,{startIndex:a,signal:t})}_processGeoJSON(e,t){M(e,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:r}=t;p(r);const n=k(e,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!b(this._spatialReference,this._getFeatureSpatialReference))for(const o of n)o.geometry!=null&&(o.geometry=j($(N(o.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=a??1;for(const o of n){const i={};U(this._fieldsIndex,i,o.attributes,!0),o.attributes=i,i[this._objectIdField]==null&&(o.objectId=i[this._objectIdField]=u++)}return n}}function*J(s,e,t){for(let a=0;a<e;a++)yield s._pageQuery(a,t)}async function v(s,e,t){let a=s.next();for(;!a.done;){try{const r=await a.value;e.push(...r)}catch(r){C(r)||t.push(r)}a=s.next()}}function w(s){const e=[];return s.totalRecordCount!=null&&(s.features.length<s.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${s.features.length} of ${s.totalRecordCount} in ${s.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:s.features.length,totalRecordCount:s.totalRecordCount}}),s.totalRecordCount>s.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${s.totalRecordCount} features exceeds the maximum allowed of ${s.maxTotalRecordCount}.`,details:{recordCount:s.features.length,totalRecordCount:s.totalRecordCount,maxTotalRecordCount:s.maxTotalRecordCount}})),e}export{ue as default};
