import{aV as m,e1 as h,e2 as g,bL as w,e3 as f,e4 as u,e5 as n,bg as d,bi as b}from"./index-Ua1bMCr9.js";import{S as V,u as S}from"./LayerView-OQz1zmOO.js";import{t as _}from"./GraphicContainer-BQH5Pw9P.js";import{O as T}from"./GraphicsView2D-DtNnE7Kv.js";import"./Container-Dt4Y9_Qc.js";import"./layerViewUtils-DI1O5zug.js";import"./AGraphicContainer-deHfXPo6.js";import"./TechniqueInstance-Okxq7EGf.js";import"./UpdateTracking2D-Drf6j-YU.js";import"./Utils-DdjKRDb_.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-A-MYeGpr.js";import"./ProgramTemplate-Dk3YeEsC.js";import"./TileContainer-qzMRRzGI.js";import"./WGLContainer-C8IHlB0x.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-BuoF98w0.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-C97CHQXE.js";import"./FeatureCommandQueue-DB4hPlIQ.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-DFT3vkRl.js";import"./ShaderBuilder-Czou906U.js";import"./BindType-BBwFZqyN.js";import"./utils-Che901Y1.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CjiDQOV4.js";import"./AttributeStore-BaH9dLWW.js";import"./timeSupport-CMyPfHAT.js";import"./normalizeUtilsSync-Be3mrKhe.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-qNw24Fni.js";let y=class extends V(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(t=>{const i=this._popupTemplates.get(t),p=t.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=i;return p}).map(t=>({type:"graphic",graphic:t,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([m(()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections},e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:t}of e){const i=g.fromJSON(o),p=new w(i.features),s=t.drawingInfo,c=r?f.fromJSON(r):null,a=u(s.renderer),l=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=l,this._popupTemplates.set(l,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}},h),m(()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol},e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})},h),m(()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol},e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})},h),m(()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol},e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=d([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const oe=y;export{oe as default};
