import{vX as Pe,go as ze,dh as it,m2 as Ce,pV as rt,kB as G,aU as E,e3 as le,iO as ve,eD as U,bs as Ie,bv as je,bl as ge,bx as re,iQ as Le,aZ as ce,eE as st,eA as Tt,vY as bt,vZ as Ot,bA as L,qM as ot,aJ as se,rF as St,v_ as Ve,e8 as Be,bm as $e,kz as Ne,ky as Pt,k5 as Ct,kC as oe,eB as V,pf as ae,v$ as $t,kG as Mt,ez as X,bo as Ue,bq as pe,eF as Dt,ba as At,vh as Et,a$ as n,b0 as p,b1 as Rt,hp as De,lb as Ae,vg as Ft,iL as zt,ak as It,cx as He,lX as jt,iH as at,e5 as he,ct as Lt,e4 as _e,cF as Vt,nl as Bt,iD as Nt,aW as Ut,pW as Ht,bC as qt}from"./index-Byn_dG8u.js";import{o as Gt}from"./floatRGBA-DvSQP-0o.js";import{z as kt,N as Wt,a8 as Xt,ar as Yt,s as Qt,a4 as Zt,a5 as Jt,aa as Kt,o as ei,as as qe,a9 as me,h as Ge,w as ti,at as ii,k as ri,an as H,G as si,m as oi,i as ai,au as ni,V as K,P as li,Q as ci,af as hi,av as ui,aj as pi,ak as di,al as fi,$ as O,v as vi,A as W,t as gi,aw as _i,ax as mi,ay as ke,az as wi,aA as yi,aB as xi,W as Ti,y as bi,aC as Oi,aD as Si,aE as Pi,aF as Ci,aG as We,aH as Xe,aI as $i,aJ as Mi}from"./VerticalOffset.glsl-Bfn_Gmjz.js";import{e as N}from"./mat4f64-Dk4dwAN8.js";import{H as Di,N as Ai,L as Ei}from"./Octree-D-XJ3GjN.js";import{b as Ri}from"./sphere-Cr73JZjN.js";import{f as Fi}from"./plane-CSTuvQSI.js";import{n as I,u as nt,f as we}from"./ShaderOutput-DnYY5J1_.js";import{o as zi}from"./VertexArrayObject-DwdmfeSZ.js";import{e as lt}from"./mat3f64-q3fE-ZOt.js";import{x as Ii}from"./BufferView-BK1AClzv.js";import{s as ji,H as Li}from"./InterleavedLayout-Rv2TeVbD.js";import{b as ct,u as Vi,n as Bi,d as Ni,e as Ui}from"./HUDVisibility.glsl-SZ0OfD1K.js";import{e as m}from"./VertexAttribute-Cq4MnHjR.js";import{B as Hi,o as qi,g as Gi,p as ki}from"./renderState-DxryJrEn.js";import{n as f,t as S}from"./glsl-BH37Aalp.js";import{a as Wi}from"./BindType-BBwFZqyN.js";import{i as Xi}from"./ShaderBuilder-DF4nfqSJ.js";let Yi=class extends kt{constructor(t,i){super(t,"vec4",Wi.Draw,(r,s,o)=>r.setUniform4fv(t,i(s,o)))}};const ht=128,Y=.5,Qr=Pe(Y/2,Y/2,1-Y/2,1-Y/2);function Zr(e){return e==="cross"||e==="x"}function Jr(e,t=ht,i=t*Y,r=0){const s=Qi(e,t,i,r);return new Wt(s,{mipmap:!1,wrap:{s:ze.CLAMP_TO_EDGE,t:ze.CLAMP_TO_EDGE},width:t,height:t,components:4,noUnpackFlip:!0,reloadable:!0})}function Qi(e,t=ht,i=t*Y,r=0){switch(e){case"circle":default:return Zi(t,i);case"square":return Ji(t,i);case"cross":return er(t,i,r);case"x":return tr(t,i,r);case"kite":return Ki(t,i);case"triangle":return ir(t,i);case"arrow":return rr(t,i)}}function Zi(e,t){const i=e/2-.5;return te(e,dt(i,i,t/2))}function Ji(e,t){return ut(e,t,!1)}function Ki(e,t){return ut(e,t,!0)}function er(e,t,i=0){return pt(e,t,!1,i)}function tr(e,t,i=0){return pt(e,t,!0,i)}function ir(e,t){return te(e,ft(e/2,t,t/2))}function rr(e,t){const i=t,r=t/2,s=e/2,o=.8*i,a=dt(s,(e-t)/2-o,Math.sqrt(o*o+r*r)),l=ft(s,i,r);return te(e,(c,h)=>Math.max(l(c,h),-a(c,h)))}function ut(e,t,i){return i&&(t/=Math.SQRT2),te(e,(r,s)=>{let o=r-.5*e+.25,a=.5*e-s-.75;if(i){const l=(o+a)/Math.SQRT2;a=(a-o)/Math.SQRT2,o=l}return Math.max(Math.abs(o),Math.abs(a))-.5*t})}function pt(e,t,i,r=0){t-=r,i&&(t*=Math.SQRT2);const s=.5*t;return te(e,(o,a)=>{let l,c=o-.5*e,h=.5*e-a-1;if(i){const _=(c+h)/Math.SQRT2;h=(h-c)/Math.SQRT2,c=_}return c=Math.abs(c),h=Math.abs(h),l=c>h?c>s?Math.sqrt((c-s)*(c-s)+h*h):h:h>s?Math.sqrt(c*c+(h-s)*(h-s)):c,l-=r/2,l})}function dt(e,t,i){return(r,s)=>{const o=r-e,a=s-t;return Math.sqrt(o*o+a*a)-i}}function ft(e,t,i){const r=Math.sqrt(t*t+i*i);return(s,o)=>{const a=Math.abs(s-e)-i,l=o-e+t/2+.75,c=(t*a+i*l)/r,h=-l;return Math.max(c,h)}}function te(e,t){const i=new Uint8Array(4*e*e);for(let r=0;r<e;r++)for(let s=0;s<e;s++){const o=s+e*r;let a=t(s,r);a=a/e+.5,Gt(a,i,4*o)}return i}function sr(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/t)}function or(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/i)}function ar(e,t,i){return 2*Math.atan(t*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}function nr(e,t,i){return 2*Math.atan(i*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}var Ye,y;(function(e){e[e.Default=0]="Default",e[e.Screenshot=1]="Screenshot",e[e.ObjectAndLayerID=2]="ObjectAndLayerID"})(Ye||(Ye={})),function(e){e[e.TOP=0]="TOP",e[e.RIGHT=1]="RIGHT",e[e.BOTTOM=2]="BOTTOM",e[e.LEFT=3]="LEFT"}(y||(y={}));var Me;let u=Me=class extends it{constructor(e){super(e),this._ray=Ri(),this._viewport=Ce(0,0,1,1),this._padding=Ce(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=rt(1,1e3),this._viewDirty=!0,this._viewMatrix=N(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=N(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=N(),this._frustumDirty=!0,this._frustum=Di(),this._fullViewport=G(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=E(),this._up=E(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(e){this._pixelRatio=e>0?e:1}get rows(){return this._rows}set rows(e){this._rows=Math.max(1,e)}get columns(){return this._columns}set columns(e){this._columns=Math.max(1,e)}get eye(){return this._ray.origin}set eye(e){this._compareAndSetView(e,this._ray.origin)}get center(){return this._center}set center(e){this._compareAndSetView(e,this._center,"_center")}get ray(){return le(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(e){this._compareAndSetView(e,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(e){ve(this._viewMatrix,e),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),U(E(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),U(E(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),U(E(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(e){this._nearFar[0]!==e&&(this._nearFar[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(e){this._nearFar[1]!==e&&(this._nearFar[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(e){this.x=e[0],this.y=e[1],this.width=e[2],this.height=e[3]}get screenViewport(){if(this.pixelRatio===1)return this._viewport;const e=Ie(G(),this._viewport,1/this.pixelRatio),t=this._get("screenViewport");return t&&je(e,t)?t:e}get screenPadding(){if(this.pixelRatio===1)return this._padding;const e=Ie(G(),this._padding,1/this.pixelRatio),t=this._get("screenPadding");return t&&je(e,t)?t:e}get x(){return this._viewport[0]}set x(e){e+=this._padding[y.LEFT],this._viewport[0]!==e&&(this._viewport[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(e){e+=this._padding[y.BOTTOM],this._viewport[1]!==e&&(this._viewport[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(e){this._viewport[2]!==e&&(this._viewport[2]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(e){this._viewport[3]!==e&&(this._viewport[3]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[y.RIGHT]+this._padding[y.LEFT]}set fullWidth(e){this.width=e-(this._padding[y.RIGHT]+this._padding[y.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[y.TOP]+this._padding[y.BOTTOM]}set fullHeight(e){this.height=e-(this._padding[y.TOP]+this._padding[y.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[y.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[y.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(e){ge(this._padding,e)||(this._viewport[0]+=e[y.LEFT]-this._padding[y.LEFT],this._viewport[1]+=e[y.BOTTOM]-this._padding[y.BOTTOM],this._viewport[2]-=e[y.RIGHT]+e[y.LEFT]-(this._padding[y.RIGHT]+this._padding[y.LEFT]),this._viewport[3]-=e[y.TOP]+e[y.BOTTOM]-(this._padding[y.TOP]+this._padding[y.BOTTOM]),re(this._padding,e),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&(Le(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){return this._projectionMatrixInternal}get inverseProjectionMatrix(){return ce(N(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||N()}get fov(){return this._fov}set fov(e){this._fov=e,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return ar(this._fov,this.width,this.height)}set fovX(e){this._fov=sr(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return nr(this._fov,this.width,this.height)}set fovY(e){this._fov=or(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return st(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(ce(this._viewInverseTransposeMatrix,this.viewMatrix),Tt(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(e){const{near:t,far:i}=this;return 2*t*i/(i+t-e*(i-t))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return this.relativeElevation!=null&&this.relativeElevation>=0}get _projectionMatrixInternal(){const e=this.width,t=this.height,i=this.near*Math.tan(this.fovY/2)*2,r=i*this._aspect,s=i/this.rows,o=r/this.columns,a=-r/2+this.column*o,l=a+o,c=-i/2+this.row*s,h=c+s,_=bt(N(),a*(1+2*this._padding[y.LEFT]/e),l*(1+2*this._padding[y.RIGHT]/e),c*(1+2*this._padding[y.BOTTOM]/t),h*(1+2*this._padding[y.TOP]/t),this.near,this.far),v=this._get("projectionMatrix");return v&&Ot(v,_)?v:_}copyFrom(e){L(this._ray.origin,e.eye),this.center=e.center,this.up=e.up,re(this._viewport,e.viewport),this.notifyChange("_viewport"),re(this._padding,e.padding),this.notifyChange("_padding"),ot(this._nearFar,e.nearFar),this.notifyChange("_nearFar"),this._fov=e.fov,this.row=e.row,this.column=e.column,this.rows=e.rows,this.columns=e.columns,this.relativeElevation=e.relativeElevation;const t=e;return this._viewDirty=t._viewDirty,this._viewDirty||(ve(this._viewMatrix,e.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=t._frustumDirty,this._frustumDirty||(Ai(this._frustum,e.frustum),this._frustumDirty=!1),t._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(ve(this._viewInverseTransposeMatrix,e.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),re(this._fullViewport,e.fullViewport),this.pixelRatio=e.pixelRatio,this}copyViewFrom(e){this.eye=e.eye,this.center=e.center,this.up=e.up,this.fov=e.fov}clone(){return new Me().copyFrom(this)}equals(e){return se(this.eye,e.eye)&&se(this.center,e.center)&&se(this.up,e.up)&&ge(this._viewport,e.viewport)&&ge(this._padding,e.padding)&&St(this.nearFar,e.nearFar)&&this._fov===e.fov&&this.pixelRatio===e.pixelRatio&&this.relativeElevation===e.relativeElevation&&this.row===e.row&&this.column===e.column&&this.rows===e.rows&&this.columns===e.columns}almostEquals(e){const t=Math.max(1,1/this.pixelRatio,1/e.pixelRatio);if(Math.abs(e.fov-this._fov)>=.001||Ve(e.screenPadding,this.screenPadding)>=t||Ve(this.screenViewport,e.screenViewport)>=t||this.row!==e.row||this.column!==e.column||this.rows!==e.rows||this.columns!==e.columns)return!1;Be(P,e.eye,e.center),Be(ye,this.eye,this.center);const i=$e(P,ye),r=Ne(P),s=Ne(ye),o=5e-4;return i*i>=(1-1e-10)*r*s&&Pt(e.eye,this.eye)<Math.max(r,s)*o*o}computeRenderPixelSizeAt(e){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(e))}computeRenderPixelSizeAtDist(e){return e*this.perRenderPixelRatio}computeScreenPixelSizeAt(e){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(e))}_viewDirectionDistance(e){return Math.abs(Fi(this.viewForward,le(P,e,this.eye)))}computeScreenPixelSizeAtDist(e){return e*this.perScreenPixelRatio}computeDistanceFromRadius(e,t){return e/Math.tan(Math.min(this.fovX,this.fovY)/(2*(t||1)))}getScreenCenter(e=Ct()){return e[0]=(this.padding[y.LEFT]+this.width/2)/this.pixelRatio,e[1]=(this.padding[y.TOP]+this.height/2)/this.pixelRatio,e}getRenderCenter(e,t=.5,i=.5){return e[0]=this.padding[y.LEFT]+this.width*t,e[1]=this.padding[y.BOTTOM]+this.height*i,e[2]=.5,e}setGLViewport(e){const t=this.viewport,i=this.padding;e.setViewport(t[0]-i[3],t[1]-i[2],t[2]+i[1]+i[3],t[3]+i[0]+i[2])}applyProjection(e,t){e!==g&&L(g,e),g[3]=1,oe(g,g,this.projectionMatrix);const i=Math.abs(g[3]);V(g,g,1/i);const r=this.fullViewport;t[0]=ae(0,r[0]+r[2],.5+.5*g[0]),t[1]=ae(0,r[1]+r[3],.5+.5*g[1]),t[2]=.5*(g[2]+1),t[3]=i}unapplyProjection(e,t){const i=this.fullViewport;g[0]=(e[0]/(i[0]+i[2])*2-1)*e[3],g[1]=(e[1]/(i[1]+i[3])*2-1)*e[3],g[2]=(2*e[2]-1)*e[3],g[3]=e[3],this.inverseProjectionMatrix!=null&&(oe(g,g,this.inverseProjectionMatrix),t[0]=g[0],t[1]=g[1],t[2]=g[2])}projectToScreen(e,t){return this.projectToRenderScreen(e,xe),this.renderToScreen(xe,t),t}projectToRenderScreen(e,t){if(g[0]=e[0],g[1]=e[1],g[2]=e[2],g[3]=1,oe(g,g,this.viewProjectionMatrix),g[3]===0)return null;const i=g;V(i,i,1/Math.abs(g[3]));const r=this.fullViewport,s=ae(0,r[0]+r[2],.5+.5*i[0]),o=ae(0,r[1]+r[3],.5+.5*i[1]);return"x"in t?(t.x=s,t.y=o):(t[0]=s,t[1]=o,t.length>2&&(t[2]=.5*(i[2]+1))),t}unprojectFromScreen(e,t){return this.unprojectFromRenderScreen(this.screenToRender(e,xe),t)}unprojectFromRenderScreen(e,t){if(Le(ne,this.projectionMatrix,this.viewMatrix),!ce(ne,ne))return null;const i=this.fullViewport;return g[0]=2*(e[0]-i[0])/i[2]-1,g[1]=2*(e[1]-i[1])/i[3]-1,g[2]=2*e[2]-1,g[3]=1,oe(g,g,ne),g[3]===0?null:(t[0]=g[0]/g[3],t[1]=g[1]/g[3],t[2]=g[2]/g[3],t)}constrainWindowSize(e,t,i,r){const s=e*this.pixelRatio,o=t*this.pixelRatio,a=Math.max(s-i/2,0),l=Math.max(this.fullHeight-o-r/2,0),c=-Math.min(s-i/2,0),h=-Math.min(this.fullHeight-o-r/2,0),_=i-c- -Math.min(this.fullWidth-s-i/2,0),v=r-h- -Math.min(o-r/2,0);return[Math.round(a),Math.round(l),Math.round(_),Math.round(v)]}computeUp(e){e===Mt.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(e,t){const i=e[0]*this.pixelRatio,r=this.fullHeight-e[1]*this.pixelRatio;return t[0]=i,t[1]=r,t}renderToScreen(e,t){const i=e[0]/this.pixelRatio,r=(this.fullHeight-e[1])/this.pixelRatio;t[0]=i,t[1]=r}_computeUpGlobal(){le(P,this.center,this.eye);const e=X(this.center);e<1?(U(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs($e(P,this.center))>.9999*X(P)*e||(Ue(this._up,P,this.center),Ue(this._up,this._up,P),pe(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){Dt(P,this.eye,this.center),Math.abs(P[2])<=.9999&&(V(P,P,P[2]),U(this._up,-P[0],-P[1],1-P[2]),pe(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(e,t,i=""){typeof e[0]=="number"&&isFinite(e[0])&&typeof e[1]=="number"&&isFinite(e[1])&&typeof e[2]=="number"&&isFinite(e[2])?se(e,t)||(L(t,e),this._markViewDirty(),i.length&&this.notifyChange(i)):At.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(Ei(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(Et(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};n([p()],u.prototype,"_viewport",void 0),n([p()],u.prototype,"_padding",void 0),n([p()],u.prototype,"_fov",void 0),n([p()],u.prototype,"_nearFar",void 0),n([p()],u.prototype,"_viewDirty",void 0),n([p()],u.prototype,"_viewMatrix",void 0),n([p()],u.prototype,"_pixelRatio",void 0),n([p()],u.prototype,"pixelRatio",null),n([p()],u.prototype,"row",void 0),n([p()],u.prototype,"column",void 0),n([p()],u.prototype,"_rows",void 0),n([p()],u.prototype,"rows",null),n([p()],u.prototype,"_columns",void 0),n([p()],u.prototype,"columns",null),n([p()],u.prototype,"eye",null),n([p()],u.prototype,"center",null),n([p()],u.prototype,"_center",void 0),n([p()],u.prototype,"up",null),n([p()],u.prototype,"_up",void 0),n([p()],u.prototype,"viewMatrix",null),n([p({readOnly:!0})],u.prototype,"viewForward",null),n([p({readOnly:!0})],u.prototype,"viewUp",null),n([p({readOnly:!0})],u.prototype,"viewRight",null),n([p({readOnly:!0})],u.prototype,"nearFar",null),n([p()],u.prototype,"near",null),n([p()],u.prototype,"far",null),n([p()],u.prototype,"viewport",null),n([p({readOnly:!0})],u.prototype,"screenViewport",null),n([p({readOnly:!0})],u.prototype,"screenPadding",null),n([p()],u.prototype,"x",null),n([p()],u.prototype,"y",null),n([p()],u.prototype,"width",null),n([p()],u.prototype,"height",null),n([p()],u.prototype,"fullWidth",null),n([p()],u.prototype,"fullHeight",null),n([p({readOnly:!0})],u.prototype,"_aspect",null),n([p()],u.prototype,"padding",null),n([p({readOnly:!0})],u.prototype,"projectionMatrix",null),n([p({readOnly:!0})],u.prototype,"inverseProjectionMatrix",null),n([p()],u.prototype,"fov",null),n([p()],u.prototype,"fovX",null),n([p()],u.prototype,"fovY",null),n([p()],u.prototype,"viewInverseTransposeMatrix",null),n([p({readOnly:!0})],u.prototype,"_projectionMatrixInternal",null),n([p()],u.prototype,"relativeElevation",void 0),u=Me=n([Rt("esri.views.3d.webgl.RenderCamera")],u);const Kr=u,g=G(),ne=N(),P=E(),ye=E(),xe=$t(),lr={required:[]};I.Depth;let vt=class extends it{precompile(t){return!!this.acquireTechniques(t)}consumes(){return lr}get usedMemory(){return 0}get isDecoration(){return!1}get running(){return!1}modify(t){}get numGeometries(){return 0}get hasOccludees(){return!1}get hasEmissions(){return!1}forEachGeometry(t){}queryRenderOccludedState(t){return!1}};class ts extends vt{}class is extends vt{}let rs=class extends zi{};function cr(e){return e instanceof Float32Array&&e.length>=16}function hr(e){return Array.isArray(e)&&e.length>=16}function ur(e){return cr(e)||hr(e)}class pr{constructor(){this.factor=new Qe,this.factorAlignment=new Qe}}class Qe{constructor(){this.scale=0,this.factor=0,this.minScaleFactor=0}}function dr(e,t){const{vertex:i,fragment:r}=e;e.include(Xt,t),i.include(ct),i.main.add(f`vec4 posProjCenter;
if (dot(position, position) > 0.0) {
ProjectHUDAux projectAux;
vec4 posProj = projectPositionHUD(projectAux);
posProjCenter = alignToPixelCenter(posProj, viewport.zw);
forwardViewPosDepth(projectAux.posView);
vec3 vpos = projectAux.posModel;
if (rejectBySlice(vpos)) {
posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
}
} else {
posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);
}
gl_Position = posProjCenter;
gl_PointSize = 1.0;`),r.main.add(f`fragColor = vec4(1);
if(discardByTerrainDepth()) {
fragColor.g = 0.5;
}`)}function gt(e){const t=new Xi,i=e.signedDistanceFieldEnabled;t.include(Vi,e),t.vertex.include(Yt,e);const{occlusionPass:r,output:s,oitPass:o}=e;if(r)return t.include(dr,e),t;const{vertex:a,fragment:l}=t;t.include(Qt),t.include(Zt,e),t.include(Jt,e),t.include(Bi),l.include(Ni),l.include(Kt),t.varyings.add("vcolor","vec4"),t.varyings.add("vtc","vec2"),t.varyings.add("vsize","vec2");const c=s===I.Highlight,h=c&&e.occlusionTestEnabled;h&&t.varyings.add("voccluded","float"),a.uniforms.add(new ei("viewport",d=>d.camera.fullViewport),new qe("screenOffset",(d,b)=>Ae(ue,2*d.screenOffset[0]*b.camera.pixelRatio,2*d.screenOffset[1]*b.camera.pixelRatio)),new qe("anchorPosition",d=>ee(d)),new me("materialColor",d=>d.color),new Ge("materialRotation",d=>d.rotation)),ti(a),i&&(a.uniforms.add(new me("outlineColor",d=>d.outlineColor)),l.uniforms.add(new me("outlineColor",d=>Ze(d)?d.outlineColor:Ft),new Ge("outlineSize",d=>Ze(d)?d.outlineSize:0))),e.horizonCullingEnabled&&a.uniforms.add(new Yi("pointDistanceSphere",(d,b)=>{const D=b.camera.eye,R=d.origin;return Ce(R[0]-D[0],R[1]-D[1],R[2]-D[2],zt.radius)})),e.pixelSnappingEnabled&&a.include(ct),e.hasScreenSizePerspective&&(ii(a),ri(a)),e.debugDrawLabelBorder&&t.varyings.add("debugBorderCoords","vec4"),t.attributes.add(m.UV0,"vec2"),t.attributes.add(m.COLOR,"vec4"),t.attributes.add(m.SIZE,"vec2"),t.attributes.add(m.ROTATION,"float"),t.attributes.add(m.FEATUREATTRIBUTE,"vec4"),a.code.add(e.horizonCullingEnabled?f`bool behindHorizon(vec3 posModel) {
vec3 camToEarthCenter = pointDistanceSphere.xyz - localOrigin;
vec3 camToPos = pointDistanceSphere.xyz + posModel;
float earthRadius = pointDistanceSphere.w;
float a = dot(camToPos, camToPos);
float b = dot(camToPos, camToEarthCenter);
float c = dot(camToEarthCenter, camToEarthCenter) - earthRadius * earthRadius;
return  b > 0.0 && b < a && b * b  > a * c;
}`:f`bool behindHorizon(vec3 posModel) { return false; }`),a.main.add(f`
      ProjectHUDAux projectAux;
      vec4 posProj = projectPositionHUD(projectAux);
      forwardObjectAndLayerIdColor();

      if (rejectBySlice(projectAux.posModel)) {
        // Project outside of clip plane
        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
        return;
      }

      if (behindHorizon(projectAux.posModel)) {
        // Project outside of clip plane
        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
        return;
      }

      vec2 inputSize;
      ${S(e.hasScreenSizePerspective,f`
          inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);
          vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);`,f`
          inputSize = size;
          vec2 screenOffsetScaled = screenOffset;`)}
      ${S(e.vvSize,f`inputSize *= vvScale(featureAttribute).xx;`)}

      vec2 combinedSize = inputSize * pixelRatio;
      vec4 quadOffset = vec4(0.0);

      ${S(e.occlusionTestEnabled,f`
      bool visible = testHUDVisibility(posProj);
      if (!visible) {
        vtc = vec2(0.0);
        ${S(e.debugDrawLabelBorder,"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);")}
        return;
      }`)}
      ${S(h,f`voccluded = visible ? 0.0 : 1.0;`)}
    `);const _=f`
      vec2 uv01 = floor(uv0);
      vec2 uv = uv0 - uv01;
      quadOffset.xy = (uv01 - anchorPosition) * 2.0 * combinedSize;

      ${S(e.hasRotation,f`
          float angle = radians(materialRotation + rotation);
          float cosAngle = cos(angle);
          float sinAngle = sin(angle);
          mat2 rotate = mat2(cosAngle, -sinAngle, sinAngle,  cosAngle);

          quadOffset.xy = rotate * quadOffset.xy;
        `)}

      quadOffset.xy = (quadOffset.xy + screenOffsetScaled) / viewport.zw * posProj.w;
  `,v=e.pixelSnappingEnabled?i?f`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:f`posProj += quadOffset;
if (inputSize.x == size.x) {
posProj = alignToPixelOrigin(posProj, viewport.zw);
}`:f`posProj += quadOffset;`;a.main.add(f`
    ${_}
    ${e.vvColor?"vcolor = interpolateVVColor(featureAttribute.y) * materialColor;":"vcolor = color / 255.0 * materialColor;"}

    ${S(s===I.ObjectAndLayerIdColor,f`vcolor.a = 1.0;`)}

    bool alphaDiscard = vcolor.a < ${f.float(H)};
    ${S(i,`alphaDiscard = alphaDiscard && outlineColor.a < ${f.float(H)};`)}
    if (alphaDiscard) {
      // "early discard" if both symbol color (= fill) and outline color (if applicable) are transparent
      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
      return;
    } else {
      ${v}
      gl_Position = posProj;
    }

    vtc = uv;

    ${S(e.debugDrawLabelBorder,f`debugBorderCoords = vec4(uv01, 1.5 / combinedSize);`)}
    vsize = inputSize;
  `),l.uniforms.add(new si("tex",d=>d.texture)),e.occludedFragmentFade&&(l.uniforms.add(new oi("depthMap",d=>d.mainDepth)),l.uniforms.add(new ai("occludedOpacity",d=>d.hudOccludedFragmentOpacity)));const x=e.debugDrawLabelBorder?f`(isBorder > 0.0 ? 0.0 : ${f.float(H)})`:f.float(H),w=f`
    ${S(e.debugDrawLabelBorder,f`float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`)}

    ${S(e.sampleSignedDistanceFieldTexelCenter,f`
      float txSize = float(textureSize(tex, 0).x);
      float texelSize = 1.0 / txSize;

      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel
      vec2 scaleFactor = (vsize - txSize) * texelSize;
      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;`,f`vec2 samplePos = vtc;`)}

    ${i?f`
      vec4 fillPixelColor = vcolor;

      // Get distance and map it into [-0.5, 0.5]
      float d = rgbaTofloat(texture(tex, samplePos)) - 0.5;

      // Distance in output units (i.e. pixels)
      float dist = d * vsize.x;

      // Create smooth transition from the icon into its outline
      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);
      fillPixelColor.a *= fillAlphaFactor;

      if (outlineSize > 0.25) {
        vec4 outlinePixelColor = outlineColor;
        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);

        // Create smooth transition around outline
        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);
        outlinePixelColor.a *= outlineAlphaFactor;

        if (
          outlineAlphaFactor + fillAlphaFactor < ${x} ||
          fillPixelColor.a + outlinePixelColor.a < ${f.float(H)}
        ) {
          discard;
        }

        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)
        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);
        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +
          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);

        ${S(!c,f`fragColor = vec4(compositeColor, compositeAlpha);`)}
      } else {
        if (fillAlphaFactor < ${x}) {
          discard;
        }

        ${S(!c,f`fragColor = premultiplyAlpha(fillPixelColor);`)}
      }

      // visualize SDF:
      // fragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);
      `:f`
          vec4 texColor = texture(tex, vtc, -0.5);
          if (texColor.a < ${x}) {
            discard;
          }
          ${S(!c,f`fragColor = texColor * premultiplyAlpha(vcolor);`)}
          `}

    ${S(e.occludedFragmentFade&&!c,f`
        float zSample = texelFetch(depthMap, ivec2(gl_FragCoord.xy), 0).x;
        if (zSample < gl_FragCoord.z) {
          fragColor *= occludedOpacity;
        }
        `)}

    ${S(!c&&e.debugDrawLabelBorder,f`fragColor = mix(fragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`)}
  `;switch(s){case I.Color:case I.ColorEmission:t.outputs.add("fragColor","vec4",0),s===I.ColorEmission&&t.outputs.add("fragEmission","vec4",1),o===K.ColorAlpha&&t.outputs.add("fragAlpha","float",s===I.ColorEmission?2:1),l.main.add(f`
        ${w}
        ${S(o===K.FrontFace,f`fragColor.rgb /= fragColor.a;`)}
        ${S(s===I.ColorEmission,f`fragEmission = vec4(0.0);`)}
        ${S(o===K.ColorAlpha,f`fragAlpha = fragColor.a;`)}`);break;case I.ObjectAndLayerIdColor:l.main.add(f`
        ${w}
        outputObjectAndLayerIdColor();`);break;case I.Highlight:t.include(ni,e),l.main.add(f`
        ${w}
        outputHighlight(${S(h,f`voccluded == 1.0`,f`false`)});`)}return t}function Ze(e){return e.outlineColor[3]>0&&e.outlineSize>0}function ee(e){return e.textureIsSignedDistanceField?fr(e.anchorPosition,e.distanceFieldBoundingBox,ue):ot(ue,e.anchorPosition),ue}function fr(e,t,i){Ae(i,e[0]*(t[2]-t[0])+t[0],e[1]*(t[3]-t[1])+t[1])}const ue=De(),vr=Object.freeze(Object.defineProperty({__proto__:null,build:gt,calculateAnchorPosition:ee},Symbol.toStringTag,{value:"Module"}));class gr extends li{constructor(t,i){super(t,i,new ci(vr,()=>It(()=>Promise.resolve().then(()=>Dr),void 0))),this.primitiveType=i.occlusionPass?He.POINTS:He.TRIANGLES}initializePipeline(t){const{oitPass:i,hasPolygonOffset:r,draped:s,output:o,depthTestEnabled:a,occlusionPass:l}=t,c=i===K.NONE,h=i===K.ColorAlpha,_=o===I.Highlight,v=a&&!s&&!h&&!l&&!_;return Hi({blending:nt(o)?c?qi:ui(i):null,depthTest:a&&!s?{func:jt.LEQUAL}:null,depthWrite:v?ki:null,drawBuffers:hi(i,o),colorWrite:Gi,polygonOffset:r?_r:null})}}const _r={factor:0,units:-4};class T extends pi{constructor(t){super(),this.spherical=t,this.screenCenterOffsetUnitsEnabled=!1,this.occlusionTestEnabled=!0,this.signedDistanceFieldEnabled=!1,this.sampleSignedDistanceFieldTexelCenter=!1,this.vvSize=!1,this.vvColor=!1,this.hasVerticalOffset=!1,this.hasScreenSizePerspective=!1,this.hasRotation=!1,this.debugDrawLabelBorder=!1,this.hasPolygonOffset=!1,this.depthTestEnabled=!0,this.pixelSnappingEnabled=!0,this.draped=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.occlusionPass=!1,this.occludedFragmentFade=!1,this.objectAndLayerIdColorInstanced=!1,this.horizonCullingEnabled=!0,this.isFocused=!0,this.textureCoordinateType=di.None,this.emissionSource=fi.None,this.discardInvisibleFragments=!0,this.hasVvInstancing=!1}}n([O()],T.prototype,"screenCenterOffsetUnitsEnabled",void 0),n([O()],T.prototype,"occlusionTestEnabled",void 0),n([O()],T.prototype,"signedDistanceFieldEnabled",void 0),n([O()],T.prototype,"sampleSignedDistanceFieldTexelCenter",void 0),n([O()],T.prototype,"vvSize",void 0),n([O()],T.prototype,"vvColor",void 0),n([O()],T.prototype,"hasVerticalOffset",void 0),n([O()],T.prototype,"hasScreenSizePerspective",void 0),n([O()],T.prototype,"hasRotation",void 0),n([O()],T.prototype,"debugDrawLabelBorder",void 0),n([O()],T.prototype,"hasPolygonOffset",void 0),n([O()],T.prototype,"depthTestEnabled",void 0),n([O()],T.prototype,"pixelSnappingEnabled",void 0),n([O()],T.prototype,"draped",void 0),n([O()],T.prototype,"terrainDepthTest",void 0),n([O()],T.prototype,"cullAboveTerrain",void 0),n([O()],T.prototype,"occlusionPass",void 0),n([O()],T.prototype,"occludedFragmentFade",void 0),n([O()],T.prototype,"objectAndLayerIdColorInstanced",void 0),n([O()],T.prototype,"horizonCullingEnabled",void 0),n([O()],T.prototype,"isFocused",void 0);class os extends vi{constructor(t,i){super(t,Cr),this.produces=new Map([[W.HUD_MATERIAL,r=>we(r)&&!this.parameters.drawAsLabel],[W.LABEL_MATERIAL,r=>we(r)&&this.parameters.drawAsLabel],[W.OCCLUSION_PIXELS,()=>this.parameters.occlusionTest],[W.DRAPED_MATERIAL,r=>this.parameters.draped&&we(r)]]),this._visible=!0,this._configuration=new T(i)}getConfiguration(t,i){return this._configuration.output=t,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVerticalOffset=!!this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=!!this.parameters.screenSizePerspective,this._configuration.screenCenterOffsetUnitsEnabled=this.parameters.centerOffsetUnits==="screen",this._configuration.hasPolygonOffset=this.parameters.polygonOffset,this._configuration.draped=this.parameters.draped,this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled,this._configuration.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField,this._configuration.sampleSignedDistanceFieldTexelCenter=this.parameters.sampleSignedDistanceFieldTexelCenter,this._configuration.hasRotation=this.parameters.hasRotation,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.occlusionPass=i.slot===W.OCCLUSION_PIXELS,this._configuration.occludedFragmentFade=this.parameters.occludedFragmentFade,this._configuration.horizonCullingEnabled=this.parameters.horizonCullingEnabled,this._configuration.isFocused=this.parameters.isFocused,this._configuration.depthTestEnabled=this.parameters.depthEnabled||i.slot===W.OCCLUSION_PIXELS,nt(t)&&(this._configuration.debugDrawLabelBorder=!!gi.LABELS_SHOW_BORDER),this._configuration.oitPass=i.oitPass,this._configuration.terrainDepthTest=i.terrainDepthTest,this._configuration.cullAboveTerrain=i.cullAboveTerrain,this._configuration}intersect(t,i,r,s,o,a){const{options:{selectionMode:l,hud:c,excludeLabels:h},point:_,camera:v}=r,{parameters:x}=this;if(!l||!c||h&&x.isLabel||!t.visible||!_)return;const{scaleX:w,scaleY:d}=this._getScreenScale(t,v.pixelRatio);at(be,i),t.attributes.has(m.FEATUREATTRIBUTE)&&yr(be);const b=t.attributes.get(m.POSITION),D=t.attributes.get(m.SIZE),R=t.attributes.get(m.NORMAL),q=t.attributes.get(m.ROTATION),j=t.attributes.get(m.CENTEROFFSETANDDISTANCE);ji(b.size>=3);const M=ee(x),B=this.parameters.centerOffsetUnits==="screen";for(let F=0;F<b.data.length/b.size;F++){const k=F*b.size;U(C,b.data[k],b.data[k+1],b.data[k+2]),he(C,C,i),he(C,C,v.viewMatrix);const de=F*j.size;if(U(z,j.data[de],j.data[de+1],j.data[de+2]),!B&&(C[0]+=z[0],C[1]+=z[1],z[2]!==0)){const ie=z[2];pe(z,C),le(C,C,V(z,z,ie))}const fe=F*R.size;if(U(Z,R.data[fe],R.data[fe+1],R.data[fe+2]),Je(Z,be,v,Se),this._applyVerticalOffsetTransformationView(C,Se,v,Te),v.applyProjection(C,$),$[0]>-1){B&&(z[0]||z[1])&&($[0]+=z[0]*v.pixelRatio,z[1]!==0&&($[1]+=_i(z[1],Te.factorAlignment)*v.pixelRatio),v.unapplyProjection($,C)),$[0]+=this.parameters.screenOffset[0]*v.pixelRatio,$[1]+=this.parameters.screenOffset[1]*v.pixelRatio,$[0]=Math.floor($[0]),$[1]=Math.floor($[1]);const ie=F*D.size;A[0]=D.data[ie],A[1]=D.data[ie+1],mi(A,Te.factor,A);const wt=Or*v.pixelRatio;let Ee=0;x.textureIsSignedDistanceField&&(Ee=Math.min(x.outlineSize,.5*A[0])*v.pixelRatio/2),A[0]*=w,A[1]*=d;const yt=F*q.size,xt=x.rotation+q.data[yt];if(Ke(_,$[0],$[1],A,wt,Ee,xt,x,M)){const Re=r.ray;if(he(et,C,ce(Tr,v.viewMatrix)),$[0]=_[0],$[1]=_[1],v.unprojectFromRenderScreen($,C)){const Q=E();L(Q,Re.direction);const Fe=1/X(Q);V(Q,Q,Fe),a(st(Re.origin,C)*Fe,Q,-1,!0,1,et)}}}}}intersectDraped(t,i,r,s,o,a){const l=t.attributes.get(m.POSITION),c=t.attributes.get(m.SIZE),h=t.attributes.get(m.ROTATION),_=this.parameters,v=ee(_),{scaleX:x,scaleY:w}=this._getScreenScale(t,t.screenToWorldRatio),d=Sr*t.screenToWorldRatio;for(let b=0;b<l.data.length/l.size;b++){const D=b*l.size,R=l.data[D],q=l.data[D+1],j=b*c.size;A[0]=c.data[j],A[1]=c.data[j+1];let M=0;_.textureIsSignedDistanceField&&(M=Math.min(_.outlineSize,.5*A[0])*t.screenToWorldRatio/2),A[0]*=x,A[1]*=w;const B=b*h.size,F=_.rotation+h.data[B];Ke(s,R,q,A,d,M,F,_,v)&&o(a.dist,a.normal,-1,!1)}}createBufferWriter(){return new Mr}_updateScaleInfo(t,i,r){const s=this.parameters;s.screenSizePerspective!=null?ke(r,i,s.screenSizePerspective,t.factor):(t.factor.scale=1,t.factor.factor=0,t.factor.minScaleFactor=0),s.screenSizePerspectiveAlignment!=null?ke(r,i,s.screenSizePerspectiveAlignment,t.factorAlignment):(t.factorAlignment.factor=t.factor.factor,t.factorAlignment.scale=t.factor.scale,t.factorAlignment.minScaleFactor=t.factor.minScaleFactor)}applyShaderOffsetsView(t,i,r,s,o,a,l){const c=Je(i,r,o,Se);return this._applyVerticalGroundOffsetView(t,c,o,l),this._applyVerticalOffsetTransformationView(l,c,o,a),this._applyPolygonOffsetView(l,c,s[3],o,l),this._applyCenterOffsetView(l,s,l),l}applyShaderOffsetsNDC(t,i,r,s,o){return this._applyCenterOffsetNDC(t,i,r,s),o!=null&&L(o,s),this._applyPolygonOffsetNDC(s,i,r,s),s}_applyPolygonOffsetView(t,i,r,s,o){const a=s.aboveGround?1:-1;let l=Math.sign(r);l===0&&(l=a);const c=a*l;if(this.parameters.shaderPolygonOffset<=0)return L(o,t);const h=Lt(Math.abs(i.cosAngle),.01,1),_=1-Math.sqrt(1-h*h)/h/s.viewport[2];return V(o,t,c>0?_:1/_),o}_applyVerticalGroundOffsetView(t,i,r,s){const o=X(t),a=r.aboveGround?1:-1,l=r.computeRenderPixelSizeAtDist(o)*Ui,c=V(C,i.normal,a*l);return _e(s,t,c),s}_applyVerticalOffsetTransformationView(t,i,r,s){var h;const o=this.parameters;if(!((h=o.verticalOffset)!=null&&h.screenLength)){if(o.screenSizePerspective||o.screenSizePerspectiveAlignment){const _=X(t);this._updateScaleInfo(s,_,i.cosAngle)}else s.factor.scale=1,s.factorAlignment.scale=1;return t}const a=X(t),l=o.screenSizePerspectiveAlignment??o.screenSizePerspective,c=wi(r,a,o.verticalOffset,i.cosAngle,l);return this._updateScaleInfo(s,a,i.cosAngle),V(i.normal,i.normal,c),_e(t,t,i.normal)}_applyCenterOffsetView(t,i,r){const s=this.parameters.centerOffsetUnits!=="screen";return r!==t&&L(r,t),s&&(r[0]+=i[0],r[1]+=i[1],i[2]&&(pe(Z,r),_e(r,r,V(Z,Z,i[2])))),r}_applyCenterOffsetNDC(t,i,r,s){const o=this.parameters.centerOffsetUnits!=="screen";return s!==t&&L(s,t),o||(s[0]+=i[0]/r.fullWidth*2,s[1]+=i[1]/r.fullHeight*2),s}_applyPolygonOffsetNDC(t,i,r,s){const o=this.parameters.shaderPolygonOffset;if(t!==s&&L(s,t),o){const a=r.aboveGround?1:-1,l=a*Math.sign(i[3]);s[2]-=(l||a)*o}return s}set visible(t){this._visible=t}get visible(){const{color:t,outlineSize:i,outlineColor:r}=this.parameters,s=t[3]>=H||i>=H&&r[3]>=H;return this._visible&&s}createGLMaterial(t){return new mr(t)}calculateRelativeScreenBounds(t,i,r=Vt()){return wr(this.parameters,t,i,r),r[2]=r[0]+t[0],r[3]=r[1]+t[1],r}_getScreenScale(t,i){const r=t.attributes.get(m.FEATUREATTRIBUTE);if(r==null)return{scaleX:i,scaleY:i};const s=Bt(r.data,br);return yi(Oe,this.parameters,s),{scaleX:Oe[0]*i,scaleY:Oe[1]*i}}}class mr extends Mi{constructor(t){super({...t,...t.material.parameters})}beginSlot(t){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.getTechnique(gr,t)}}function wr(e,t,i,r){r[0]=e.anchorPosition[0]*-t[0]+e.screenOffset[0]*i,r[1]=e.anchorPosition[1]*-t[1]+e.screenOffset[1]*i}function Je(e,t,i,r){return ur(t)&&(t=at(xr,t)),Nt(r.normal,e,t),he(r.normal,r.normal,i.viewInverseTransposeMatrix),r.cosAngle=$e(_t,Pr),r}function yr(e){const t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],_=1/Math.sqrt(t*t+i*i+r*r),v=1/Math.sqrt(s*s+o*o+a*a),x=1/Math.sqrt(l*l+c*c+h*h);return e[0]=t*_,e[1]=i*_,e[2]=r*_,e[3]=s*v,e[4]=o*v,e[5]=a*v,e[6]=l*x,e[7]=c*x,e[8]=h*x,e}function Ke(e,t,i,r,s,o,a,l,c){let h=t-s-r[0]*c[0],_=h+r[0]+2*s,v=i-s-r[1]*c[1],x=v+r[1]+2*s;const w=l.distanceFieldBoundingBox;return l.textureIsSignedDistanceField&&w!=null&&(h+=r[0]*w[0],v+=r[1]*w[1],_-=r[0]*(1-w[2]),x-=r[1]*(1-w[3]),h-=o,_+=o,v-=o,x+=o),Ae(tt,t,i),Ht(J,e,tt,qt(a)),J[0]>h&&J[0]<_&&J[1]>v&&J[1]<x}const Te=new pr,C=E(),Z=E(),$=G(),_t=E(),et=E(),J=De(),tt=De(),be=lt(),xr=lt(),Tr=N(),z=E(),Oe=E(),br=G(),Se={normal:_t,cosAngle:0},Or=1,Sr=2,A=[0,0],Pr=Ut(0,0,1);class Cr extends xi{constructor(){super(...arguments),this.renderOccluded=Ti.Occlude,this.isDecoration=!1,this.color=Pe(1,1,1,1),this.polygonOffset=!1,this.anchorPosition=rt(.5,.5),this.screenOffset=[0,0],this.shaderPolygonOffset=1e-5,this.textureIsSignedDistanceField=!1,this.sampleSignedDistanceFieldTexelCenter=!1,this.outlineColor=Pe(1,1,1,1),this.outlineSize=0,this.distanceFieldBoundingBox=G(),this.rotation=0,this.hasRotation=!1,this.vvSizeEnabled=!1,this.vvSize=null,this.vvColor=null,this.vvOpacity=null,this.vvSymbolAnchor=null,this.vvSymbolRotationMatrix=null,this.hasSlicePlane=!1,this.pixelSnappingEnabled=!0,this.occlusionTest=!0,this.occludedFragmentFade=!1,this.horizonCullingEnabled=!1,this.centerOffsetUnits="world",this.drawAsLabel=!1,this.depthEnabled=!0,this.isFocused=!0,this.focusEffect="none",this.draped=!1,this.isLabel=!1}}const mt=Li().vec3f(m.POSITION).vec3f(m.NORMAL).vec2f(m.UV0).vec4u8(m.COLOR).vec2f(m.SIZE).f32(m.ROTATION).vec4f(m.CENTEROFFSETANDDISTANCE).vec4f(m.FEATUREATTRIBUTE),$r=mt.clone().vec4u8(m.OBJECTANDLAYERIDCOLOR);class Mr{constructor(){this.vertexBufferLayout=bi()?$r:mt}elementCount(t){return 6*t.get(m.POSITION).indices.length}write(t,i,r,s,o,a){var q,j;Oi(r.get(m.POSITION),t,o.position,a,6),Si(r.get(m.NORMAL),i,o.normal,a,6);const l=(q=r.get(m.UV0))==null?void 0:q.data;let c=0,h=0,_=1,v=1;l&&l.length>=4&&(c=l[0],h=l[1],_=l[2],v=l[3]),_=Math.min(1.99999,_+1),v=Math.min(1.99999,v+1);let x=r.get(m.POSITION).indices.length,w=a;const d=o.uv0;for(let M=0;M<x;++M)d.set(w,0,c),d.set(w,1,h),w++,d.set(w,0,_),d.set(w,1,h),w++,d.set(w,0,_),d.set(w,1,v),w++,d.set(w,0,_),d.set(w,1,v),w++,d.set(w,0,c),d.set(w,1,v),w++,d.set(w,0,c),d.set(w,1,h),w++;Pi(r.get(m.COLOR),4,o.color,a,6);const{data:b,indices:D}=r.get(m.SIZE);x=D.length;const R=o.size;w=a;for(let M=0;M<x;++M){const B=b[2*D[M]],F=b[2*D[M]+1];for(let k=0;k<6;++k)R.set(w,0,B),R.set(w,1,F),w++}if(Ci(r.get(m.ROTATION),o.rotation,a,6),r.get(m.CENTEROFFSETANDDISTANCE)?We(r.get(m.CENTEROFFSETANDDISTANCE),o.centerOffsetAndDistance,a,6):Xe(o.centerOffsetAndDistance,a,6*x),r.get(m.FEATUREATTRIBUTE)?We(r.get(m.FEATUREATTRIBUTE),o.featureAttribute,a,6):Xe(o.featureAttribute,a,6*x),s!=null){const M=(j=r.get(m.POSITION))==null?void 0:j.indices;if(M){const B=M.length,F=o.getField(m.OBJECTANDLAYERIDCOLOR,Ii);$i(s,F,B,a,6)}}}}const Dr=Object.freeze(Object.defineProperty({__proto__:null,build:gt,calculateAnchorPosition:ee},Symbol.toStringTag,{value:"Module"}));export{os as a,Jr as b,Qr as c,Y as d,ht as e,Kr as i,is as o,rs as r,Zr as s,ts as u};
