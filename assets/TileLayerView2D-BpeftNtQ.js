import{dR as w,dS as y,dT as I,dU as T,dV as V,d4 as u,dW as H,bo as v,dX as n,dY as d,dZ as C,ba as b,bg as c,bh as f,bi as U}from"./index-ChIkxCSH.js";import"./UpdateTracking2D-CIpvxuwY.js";import"./Container-DMPWAjim.js";import"./WGLContainer-C5yOuirr.js";import"./Utils-DooKMHZs.js";import"./StyleDefinition-CuXyGPLK.js";import"./constants-B-jzO-JJ.js";import"./GridShader-CvxwkuTF.js";import"./TechniqueType-CFPo0AVB.js";import"./FramebufferObject-CgHE6E49.js";import"./FeatureCommandQueue-DK_f55Nj.js";import"./PieChartMeshWriter-DkJUTkvU.js";import"./constants-BFLErLYb.js";import"./renderState-CM0ZXgVd.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-DkKW0w7Y.js";import{O as q}from"./GraphicsView2D-_OhTwe4i.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import{r as S,o,n as _}from"./imageUtils-DD_apNSo.js";import{S as P,u as Q}from"./LayerView-D2dXBvv1.js";import{a as G}from"./HighlightGraphicContainer-CG6tQlmz.js";import{i as L}from"./RefreshableLayerView-BrWV4eBS.js";import{_ as k,P as F,i as W}from"./MapServiceLayerViewHelper-zLfltA_4.js";import{r as z}from"./drapedUtils-C1w2cSih.js";import"./ProgramTemplate-nNEQYQQS.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./config-DHajyIwB.js";import"./featureConversionUtils-uC8tjxfq.js";import"./GraphShaderModule-Dawi38Ts.js";import"./ShaderBuilder-CgNbpGEw.js";import"./BindType-BBwFZqyN.js";import"./utils-rYaNYqyf.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-BGVXdQhu.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-B9rRigml.js";import"./libtess-gHk7uHgk.js";import"./basicInterfaces-CZwQPxTp.js";import"./AttributeStore-bMuCU3FN.js";import"./timeSupport-DQiMTjpj.js";import"./normalizeUtilsSync-CE2vqD83.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-Cn1mh86t.js";import"./BitmapTechnique-ILPNSjOa.js";import"./TileContainer-DzpFN5C2.js";import"./layerViewUtils-DC8qjr_N.js";import"./AGraphicContainer-DC2J1BLx.js";import"./TechniqueInstance-PZkMhluw.js";import"./popupUtils-CzO65vKe.js";const E=[0,0];let l=class extends L(S(P(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){var t;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),(t=this._highlightView)==null||t.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,t==null?void 0:t.effectiveMinLOD,t==null?void 0:t.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(i,h)=>this.fetchTile(i,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),k(this,this.layer)){const i=this._highlightView=new q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new G(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new F({createFetchPopupFeaturesQueryGeometry:(h,s)=>z(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>i.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var e,t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(e=this._popupHighlightHelper)==null||e.destroy(),(t=this._highlightView)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t):[]}highlight(e,t){const i=W(e);if(i.length===0)return u();const h=(t==null?void 0:t.name)??H;return this._addHighlightGraphics(i,h),u(()=>!this.destroyed&&this._removeHighlightGraphics(i,h))}_processHighlight(){var t;const e=this._getHighlights();(t=this._highlightView)==null||t.setHighlight(e)}_addHighlightGraphics(e,t){this._highlightGraphics.addMany(e),this._addHighlights(e.map(i=>i.uid),t)}_removeHighlightGraphics(e,t){this._highlightGraphics.removeMany(e),this._removeHighlights(e.map(i=>i.uid),t)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){var t;return v((t=this.layer.tileInfo)==null?void 0:t.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(E,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){return this.tilemapCache?this._fetchTileWithTilemapCache(e,t):this._fetchTileWithoutTilemapCache(e,t)}async _fetchTileWithoutTilemapCache(e,t={}){const{signal:i,resamplingLevel:h=0}=t;try{return await this._fetchImage(e,i)}catch(s){if(n(s))throw s;if(!this.resampling)return o(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(e.id);if(r){const a=new d(r),p=await this._fetchTileWithoutTilemapCache(a,{...t,resamplingLevel:h+1});return _(this._tileInfoView,p,a,e)}}return o(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(e,t={}){const i=this.tilemapCache,{signal:h,resamplingLevel:s=0}=t,r=new d(0,0,0,0);let a,p=null;try{if(p=await i.fetchAvailabilityUpsample(e.level,e.row,e.col,r,{signal:h}),!this.resampling&&r.level!==e.level)return await C(t),o(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&p==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(e.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...t,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,e):a:o(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){n(t)||b.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};c([f()],l.prototype,"resampling",null),c([f()],l.prototype,"tilemapCache",null),l=c([U("esri.views.2d.layers.TileLayerView2D")],l);const Fe=l;export{Fe as default};
