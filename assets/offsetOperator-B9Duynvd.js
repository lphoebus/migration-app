import{hF as c,aI as x}from"./index-ChIkxCSH.js";import{w as d,j as y}from"./operatorOffset-CZycb6q_.js";import{getSpatialReference as f,fromGeometry as G,toGeometry as u,fromGeometries as g}from"./jsonConverter-CyiIspEc.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./ProjectionTransformation-BHKsPWZT.js";import"./Envelope2D-CgpSZaHd.js";import"./Point2D-DO7Km_4P.js";import"./Transformation2D-BtuI33it.js";import"./OperatorDefinitions-DP7_WWTp.js";const l={round:0,bevel:1,miter:2,square:3};function v(e,t,n={}){const{miterLimit:a=10,flattenError:s=0,joins:p="round",unit:r}=n,o=f(e);r&&o&&(t=c(t,r,o));const m=G(e),i=m.getSpatialReference();return u(d(m.getGeometry(),i,t,l[p],a,s),i)}function w(e,t,n={}){const{miterLimit:a=10,flattenError:s=0,joins:p="round",unit:r}=n,o=f(e);r&&o&&(t=c(t,r,o));const[m,i]=g(e);return y(m,i,t,l[p],a,s).map(j=>u(j,i)).filter(x)}export{v as execute,w as executeMany};
